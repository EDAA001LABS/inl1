package soduko;

public class Unit {
	private int number;											// The soduko number the unit holds.
	private int column;												// The column in which the unit is.
	private int row;													// The row in which the unit is.
	private int section;												// The section in which the unit is.
	private boolean original;									// If the number was added by the program or the user.

	public Unit(int number, int column, int row, boolean original) {
		this.number = number;
		this.column = column;
		this.row = row;
		this.section = ((column/3)+1) + ((row/3)*3);
		this.original = original;
		if (column > 8) {
			this.row += 1;
			this.column = 0;
			if (this.row > 8) {
				this.number = -1;
			}
		}
	}
	
	/**
	 * Returns the number of the Unit.
	 * 
	 * @return The number of the unit.
	 */
	
	public int getNumber() {
		return number;
	}
	
	/**
	 * Returns the row of the Unit.
	 * 
	 * @return The row of the unit.
	 */
	public int getRow() {
		return row;
	}
	
	/**
	 * Returns the column of the Unit.
	 * 
	 * @return The column of the unit.
	 */
	public int getColumn()  {
		return column;
	}
	
	/**
	 * Returns the section of the Unit.
	 * 
	 * @return The section of the unit.
	 */
	public int getSection() {
		return section;
	}
	
	/**
	 * Checks if a unit was added by the user or the program.
	 * 
	 * @return true if it was added by the user
	 */
	public boolean getOriginal() {
		return original;
	}
	
	/**
	 * Sets the number of the unit to the specified number
	 * 
	 * @param newNumber
	 *            The new number
	 */
	public void setNumber(int newNumber) {
		this.number = newNumber;
	}
	
	/**
	 * Sets the column of the unit to the specified column
	 * 
	 * @param newColumn
	 *            The new column
	 */
	public void setColumn (int newColumn) {
		this.column = newColumn;
		this.section = ((column/3)+1) + ((row/3)*3);
	}
	
	/**
	 * Sets the row of the unit to the specified row
	 * 
	 * @param newRow
	 *            The new row
	 */
	public void setRow (int newRow) {
		this.row = newRow;
		this.section = ((column/3)+1) + ((row/3)*3);
	}
}
